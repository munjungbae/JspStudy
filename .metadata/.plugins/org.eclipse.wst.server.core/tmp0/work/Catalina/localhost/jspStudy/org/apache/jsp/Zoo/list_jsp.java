/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2024-12-19 10:01:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Zoo;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import co.kh.dev.boardone.model.BoardVO;
import co.kh.dev.boardone.model.BoardDAO;
import java.util.ArrayList;
import java.text.SimpleDateFormat;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("co.kh.dev.boardone.model.BoardDAO");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("co.kh.dev.boardone.model.BoardVO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

int banner_num = (int) Math.floor(Math.random() * (4 - 1 + 1) + 1);
request.setCharacterEncoding("UTF-8");
String id = (String) session.getAttribute("id");
String pass = (String) session.getAttribute("pass");

      out.write('\r');
      out.write('\n');

request.setCharacterEncoding("UTF-8");
//1. 페이징기법 ( 페이징 사이즈 , 즉 한페이지에 보일 카디널리티의 개수 (현재 10개로 지정))
int pageSize = 10;

//2. 페이지 번호 선택
String pageNum = request.getParameter("pageNum");
if (pageNum == null) {
	pageNum = "1";
}

//3 현재 페이지를 설정하고 start, end 를 결정
int currentPage = Integer.parseInt(pageNum);
int start = (currentPage - 1) * pageSize + 1; // ex) 4페이지를 원한다 => (4-1)*10+1 = 31부터 시작 
int end = (currentPage) * pageSize; // ex) 4페이지를 원한다 => (4)*10 = 40까지 즉 31 ~ 40 항목 출력.

/* CURD 부문 */
SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");

//4. 해당된 페이지 10개를 가져온다
int number = 0;
ArrayList<BoardVO> boardList = null;
BoardDAO bdao = BoardDAO.getInstance();

//전체 글 목록 개수파악 (num desc) 가장최근것 가져오기
int count = bdao.selectCounteDB();
if (count > 0) {
	//현재 페이지 내용을 가져온다 (start부터 end까지 현재 사이즈는 10이므로 10개만 가져옴.)
	boardList = bdao.selectStartEndDB(start, end);
}

//5. 위 예시처럼 4페이지를 가져왔다면 해당 number는 31번부터 40번까지를 출력해야 하므로 
// count = 전체개수 ex) 100
//즉 잔체개수 100 => 1페이지 (100 ~ 91), 2페이지 (90 ~ 81)
// 100 - (2 -1) * 10 = 90
number = count - (currentPage - 1) * pageSize;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>게시판</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"list.css?timestamp=");
      out.print(System.currentTimeMillis());
      out.write("\">\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/f5a3833180.js\" defer\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script language=\"javascript\"\r\n");
      out.write("	src=\"script.js?timestamp=");
      out.print(System.currentTimeMillis());
      out.write("\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"onload()\">\r\n");
      out.write("	");

	if (id == null) {
	
      out.write("\r\n");
      out.write("	<div class=\"banner\">\r\n");
      out.write("		<div class=\"banner_left\">\r\n");
      out.write("			<a href=\"Zoo.jsp\" target=\"_self\"><i class=\"fa-solid fa-cat\"></i></a>\r\n");
      out.write("			<a href=\"Zoo.jsp\"><p>123</p></a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"banner_right\">\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li class=\"dropdown\"><a href=\"#\" class=\"dropdown_button\">매장소개</a>\r\n");
      out.write("					<div class=\"dropdown_content\">\r\n");
      out.write("						<a href=\"#\">관람 유의사항</a> <a href=\"#\">운영시간</a> <a href=\"#\">매장안내</a>\r\n");
      out.write("						<a href=\"#\">오시는길</a>\r\n");
      out.write("					</div></li>\r\n");
      out.write("				<li class=\"dropdown\"><a href=\"#\" class=\"dropdown_button\">체험정보</a>\r\n");
      out.write("					<div class=\"dropdown_content\">\r\n");
      out.write("						<a href=\"#\">관람 유의사항</a> <a href=\"#\">운영시간</a> <a href=\"#\">매장안내</a>\r\n");
      out.write("						<a href=\"#\">오시는길</a>\r\n");
      out.write("					</div></li>\r\n");
      out.write("				<li class=\"dropdown\"><a href=\"#\" class=\"dropdown_button\">요금/할인</a>\r\n");
      out.write("					<div class=\"dropdown_content\">\r\n");
      out.write("						<a href=\"#\">관람 유의사항</a> <a href=\"#\">운영시간</a> <a href=\"#\">매장안내</a>\r\n");
      out.write("						<a href=\"#\">오시는길</a>\r\n");
      out.write("					</div></li>\r\n");
      out.write("				<li class=\"dropdown\"><a href=\"list.jsp\" class=\"dropdown_button\">커뮤니티</a>\r\n");
      out.write("					<div class=\"dropdown_content\">\r\n");
      out.write("						<a href=\"list.jsp\">자유게시판</a> <a href=\"#\">자료실</a>\r\n");
      out.write("					</div></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"input_button\">\r\n");
      out.write("			<button type=\"button\" class=\"ticket\">\r\n");
      out.write("				<i class=\"fa-solid fa-ticket\"></i><span>구매하기</span>\r\n");
      out.write("			</button>\r\n");
      out.write("			<i class=\"fa-solid fa-user\" onclick=\"loginWindow()\"></i>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");

} else {

      out.write("\r\n");
      out.write("<body onload=\"onload()\">\r\n");
      out.write("\r\n");
      out.write("	<div class=\"banner\">\r\n");
      out.write("		<div class=\"banner_left\">\r\n");
      out.write("			<a href=\"Zoo.jsp\" target=\"_self\"><i class=\"fa-solid fa-cat\"></i></a>\r\n");
      out.write("			<a href=\"Zoo.jsp\"><p>123</p></a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"banner_right\">\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li class=\"dropdown\"><a href=\"#\" class=\"dropdown_button\">매장소개</a>\r\n");
      out.write("					<div class=\"dropdown_content\">\r\n");
      out.write("						<a href=\"#\">관람 유의사항</a> <a href=\"#\">운영시간</a> <a href=\"#\">매장안내</a>\r\n");
      out.write("						<a href=\"#\">오시는길</a>\r\n");
      out.write("					</div></li>\r\n");
      out.write("				<li class=\"dropdown\"><a href=\"#\" class=\"dropdown_button\">체험정보</a>\r\n");
      out.write("					<div class=\"dropdown_content\">\r\n");
      out.write("						<a href=\"#\">관람 유의사항</a> <a href=\"#\">운영시간</a> <a href=\"#\">매장안내</a>\r\n");
      out.write("						<a href=\"#\">오시는길</a>\r\n");
      out.write("					</div></li>\r\n");
      out.write("				<li class=\"dropdown\"><a href=\"#\" class=\"dropdown_button\">요금/할인</a>\r\n");
      out.write("					<div class=\"dropdown_content\">\r\n");
      out.write("						<a href=\"#\">관람 유의사항</a> <a href=\"#\">운영시간</a> <a href=\"#\">매장안내</a>\r\n");
      out.write("						<a href=\"#\">오시는길</a>\r\n");
      out.write("					</div></li>\r\n");
      out.write("				<li class=\"dropdown\"><a href=\"list.jsp\" class=\"dropdown_button\">커뮤니티</a>\r\n");
      out.write("					<div class=\"dropdown_content\">\r\n");
      out.write("						<a href=\"list.jsp\">자유게시판</a> <a href=\"#\">자료실</a>\r\n");
      out.write("					</div></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"input_button\">\r\n");
      out.write("			<button type=\"button\" class=\"ticket\">\r\n");
      out.write("				<i class=\"fa-solid fa-ticket\"></i><span>구매하기</span>\r\n");
      out.write("			</button>\r\n");
      out.write("			<ul class=\"myPage\">\r\n");
      out.write("				<li class=\"dropdown\"><b>");
      out.print(id);
      out.write("</b>님 환영합니다.\r\n");
      out.write("					<div class=\"dropdown_content\">\r\n");
      out.write("						<a href=\"#\">마이페이지</a> <a href=\"./login/logout.jsp\">로그아웃</a>\r\n");
      out.write("					</div></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");

}

      out.write("\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("	<nav>\r\n");
      out.write("		<h4>커뮤니티</h4>\r\n");
      out.write("		<ul>\r\n");
      out.write("			<a href=\"list.jsp\"><li>자유게시판</li></a>\r\n");
      out.write("			<a href=\"\"><li>자료실</li></a>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</nav>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"board\">\r\n");
      out.write("		<div class=\"main_top\">\r\n");
      out.write("			<b>전체 글 : ");
      out.print(count);
      out.write("\r\n");
      out.write("			</b> <a href=\"write.jsp\"><i class=\"fa-solid fa-pencil\"></i></a>\r\n");
      out.write("		</div>\r\n");
      out.write("		");

		if (count == 0) {
		
      out.write("\r\n");
      out.write("		<table>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"center\">게시판에 작성 된 글이 없습니다.</td>\r\n");
      out.write("		</table>\r\n");
      out.write("		");

		} else {
		
      out.write("\r\n");
      out.write("		<table class=\"table_top\">\r\n");
      out.write("			<thead class=\"table_head\">\r\n");
      out.write("				<th width='100px'>번 호</th>\r\n");
      out.write("				<th width=700px'>제 목</th>\r\n");
      out.write("				<th width='100px'>작성자</th>\r\n");
      out.write("				<th width='300px'>작성일</th>\r\n");
      out.write("				<th width='100px'>조 회</th>\r\n");
      out.write("			</thead>\r\n");
      out.write("			");

			for (BoardVO article : boardList) {
			
      out.write("\r\n");
      out.write("			<tbody>\r\n");
      out.write("				<td>");
      out.print(number--);
      out.write("</td>\r\n");
      out.write("				<td><a\r\n");
      out.write("					href=\"content.jsp?num=");
      out.print(article.getNum());
      out.write("&pageNum=");
      out.print(currentPage);
      out.write("\">\r\n");
      out.write("						<!-- 수정<6> --> ");

 //6 DEPTH 값에 따라 HTML코드에는 공백이 비례해야 함. EX) DEPTH = 1 , 공백 = 5 DEPTH = 2, 공백 = 10
 int wid = 0;
 if (article.getDepth() > 0) {
 	wid = 5 * (article.getDepth());
 
      out.write(" <img src=\"images/level.gif\" width=\"");
      out.print(wid);
      out.write("\" height=\"16\"> <img\r\n");
      out.write("						src=\"images/re.gif\"> ");

 }
 
      out.write(' ');
      out.print(article.getSubject());
      out.write("</a></td>\r\n");
      out.write("				<td>");
      out.print(article.getWriter());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(sdf.format(article.getRegdate()));
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(article.getReadcount());
      out.write("</td>\r\n");
      out.write("			</tbody>\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("		</table>\r\n");
      out.write("		");

		}
		
      out.write("\r\n");
      out.write("		<div class=\"center\">\r\n");
      out.write("			");

			if (count > 0) {
				int pageBlock = 5;
				int imsi = count % pageSize == 0 ? 0 : 1;
				int pageCount = count / pageSize + imsi;
				int startPage = (int) ((currentPage - 1) / pageBlock) * pageBlock + 1;
				int endPage = startPage + pageBlock - 1;
				if (endPage > pageCount) {
					endPage = pageCount;
				}
				if (startPage > pageBlock) {
			
      out.write("\r\n");
      out.write("			<a href=\"list.jsp?pageNum=");
      out.print(startPage - pageBlock);
      out.write("\">이전</a>\r\n");
      out.write("			");

			}
			for (int i = startPage; i <= endPage; i++) {
			if (currentPage == i) {
			
      out.write("\r\n");
      out.write("			<a href=\"list.jsp?pageNum=");
      out.print(i);
      out.write("\"><b>");
      out.print(i);
      out.write(" </b> </a>\r\n");
      out.write("			");

			} else {
			
      out.write("\r\n");
      out.write("			<a href=\"list.jsp?pageNum=");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(i);
      out.write(" </a>\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("			");

			}
			if (endPage < pageCount) {
			
      out.write("\r\n");
      out.write("			<a href=\"list.jsp?pageNum=");
      out.print(startPage + pageBlock);
      out.write("\">다음</a>\r\n");
      out.write("			");

			}
			}
			
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
